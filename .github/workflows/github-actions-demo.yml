#工作流名称
name: actionTest

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
# 定时任务
#  schedule:
#    - cron: '24 21 * * *'
# 事件任务
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
#    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

#define environment variables
env:
  # define images registry address
  REGISTRY: swr.cn-east-3.myhuaweicloud.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# 定义一个工作流，默认job之间是并行运行的
jobs:

#定义一个具体的job
#job的id名称  
  buildDockerImages:
#定义job运行在哪些执行机器上
    runs-on: ubuntu-latest
#定义作业中的权限
#    permissions:
#      contents: write
#      packages: write
#      # This is used to complete the identity challenge
#      # with sigstore/fulcio when running outside of PRs.
#      id-token: write

#定义一组任务
    steps:
      #检出代码库，v3代表defalut branch
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      # build jar package 
      - name: build with 'maven'
        run: 'mvn clean package' 

      #  Install docker buildx,用于构建多平台Docker镜像   
      #  https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: cn-east-3@${{ secrets.HUAWEI_CN_REGISTRY_USERNAME }}
          password: ${{ secrets.HUAWEI_CN_REGISTRY_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/livechamp-cn-v2/${{env.IMAGE_NAME}}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Asia/Shanghai'}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          provenance: false
          sbom: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}